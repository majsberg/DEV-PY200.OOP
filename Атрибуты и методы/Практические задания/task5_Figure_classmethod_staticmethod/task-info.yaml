type: theory
files:
  - name: main.py
    visible: true
    placeholders:
      - offset: 99
        length: 432
        placeholder_text: |-
          # TODO сделать методом класса
              def area(self, *args):
                  """
                  Метод, который считает площадь по разным формулам,
                   в зависимости от количества переданных аргументов.
                  """
                  if len(args) == 2:
                      self.area_by_height(*args)
                  if len(args) == 3:
                      self.area_by_angle(*args)
        initial_state:
          length: 330
          offset: 99
        initialized_from_dependency: false
        selected: true
        status: Solved
        encrypted_possible_answer: |-
          @classmethod
              def area(cls, *args):
                  """
                  Метод, который считает площадь по разным формулам,
                   в зависимости от количества переданных аргументов.
                  """
                  if len(args) == 2:
                      cls.area_by_height(*args)
                  if len(args) == 3:
                      cls.area_by_angle(*args)
      - offset: 555
        length: 67
        placeholder_text: "def area_by_angle(self, a, b, angle):  # TODO сделать стати\
      ческим методом"
        initial_state:
          length: 73
          offset: 435
        initialized_from_dependency: false
        selected: true
        status: Solved
        encrypted_possible_answer: |-
          @staticmethod
              def area_by_angle(a, b, angle):
      - offset: 760
        length: 61
        placeholder_text: "def area_by_height(self, a, h):  # TODO сделать статическим\
      \ методом"
        initial_state:
          length: 67
          offset: 627
        initialized_from_dependency: false
        selected: true
        status: Solved
        encrypted_possible_answer: |-
          @staticmethod
              def area_by_height(a, h):
    text: |
      import math
      
      
      class TriangleCalculator:
          """ Класс-калькулятор площадей треугольников. """
      
          # TODO сделать методом класса
          def area(self, *args):
              """
              Метод, который считает площадь по разным формулам,
               в зависимости от количества переданных аргументов.
              """
              if len(args) == 2:
                  self.area_by_height(*args)
              if len(args) == 3:
                  self.area_by_angle(*args)
      
          def area_by_angle(self, a, b, angle):  # TODO сделать статическим методом
              """ Формула площади по двум сторонам и углу между ними. """
              return 0.5 * a * b * math.sin(angle)
      
          def area_by_height(self, a, h):  # TODO сделать статическим методом
              """ Формула площади по основанию и высоте. """
              return 0.5 * a * h
      
      
      if __name__ == '__main__':
          TriangleCalculator().area()  # Работаем через экземпляр
          TriangleCalculator().area_by_height(5, 10)  # Работаем через экземпляр
      
          TriangleCalculator.area()  # Работаем через класс
          TriangleCalculator.area_by_height(5, 10)  # Работаем через класс
    learner_created: false
  - name: __init__.py
    visible: false
    learner_created: false
status: Solved
feedback:
  time: "Sat, 03 Feb 2024 06:44:49 UTC"
record: -1
post_submission_on_open: true
